<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

  <!--
  $Date: 2007/11/13 13:46:02 $
  $Revision: 1.12 $
  $HeadURL$

  Copyright 2007 - $Date: 2007/11/13 13:46:02 $ by PeopleWare n.v.

  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
  -->


  <!-- NOTE: you probably have to give Maven more memory:
             export MAVEN_OPTS=-Xmx1024M -->

  <!--
    Projects using this pom should fill out, in a child pom:

    The following entries should be considered part of the POM for this POM, and thus be overridden
    in your project (it's really a bad idea by the Maven people to make a parent POM its own POM).

      groupId
      artifactId
      version
      packaging

      name
      description
      inceptionYear, possibly

      ppwcode.shortArtifactName
      ppwcode.markVersion
      ppwcode.inScmLocation
      ppwcode.mainUrl
      ppwcode.mainScmUrl
      ppwcode.mainScmViewUrl
      ppwcode.mainDistroUrl

      organization
      licenses

      distribution management (you probably cannot reuse our setup :-))
      issue management
      mailing lists

      developers

    The following entries are not filled out, and should be filled out for your project.

      dependency management

    There is complete reuse for build settings (Java 5) and report settings.

    It will also be necessary to add the ppwcode repo to the pom, to find
    this parent (bootstrap problem).
   -->

  <!--  MUDO good documentation -->

  <!-- IMPORTANT NOTE: it turns out that the group id and artifact id of a parent pom cannot be a calculated
       value; the group id and artifact id of a leaf pom can -->


  <modelVersion>4.0.0</modelVersion>

  <!-- ARTIFACT ID, GROUP ID, VERSION, PACKAGING, NAME & DESCRIPTION: OVERWRITE IN YOUR CHILD POM (know what you are doing :-) ) -->
  <!-- for the artifactId, see the magic mantra below -->
  <groupId>org.ppwcode</groupId>
  <artifactId>ppwcode-library-parent-pom</artifactId>
  <version>1.0.0-SNAPSHOT</version> <!-- MUDO add Svn release number as implementation version -->
  <packaging>pom</packaging>
  <name>ppwcode library parent pom</name>
  <description>A parent pom for collections of libaries, or single libraries.
    This POM is intended for reuse outside the ppwcode project.</description>

  <!-- INCEPTION YEAR: OVERWRITE IN YOUR CHILD POM (you can't be that old :-) ) -->
  <inceptionYear>2004</inceptionYear>

  <!-- ORGANIZATION: OVERWRITE IN YOUR CHILD POM (do you think you got what it takes to work for us? :-) ) -->
  <organization>
    <name>PeopleWare n.v.</name>
    <url>http://www.peopleware.be/</url>
  </organization>

  <!-- MAILING LISTS: OVERWRITE IN YOUR CHILD POM (your chit chat is off-topic in our lists :-) ) -->
  <mailingLists>
    <mailingList>
      <name>ppwcode Announce</name>
      <subscribe>http://groups.google.com/group/ppwcode-announce/subscribe</subscribe>
      <unsubscribe>http://groups.google.com/group/ppwcode-announce/subscribe</unsubscribe>
      <post>ppwcode-announce@googlegroups.com</post>
      <archive>http://groups.google.com/group/ppwcode-announce/topics</archive>
    </mailingList>
    <mailingList>
      <name>ppwcode Developers</name>
      <subscribe>http://groups.google.com/group/ppwcode-dev/subscribe</subscribe>
      <unsubscribe>http://groups.google.com/group/ppwcode-dev/subscribe</unsubscribe>
      <post>ppwcode-dev@googlegroups.com</post>
      <archive>http://groups.google.com/group/ppwcode-dev/topics</archive>
    </mailingList>
    <mailingList>
      <name>ppwcode Users</name>
      <subscribe>http://groups.google.com/group/ppwcode-users/subscribe</subscribe>
      <unsubscribe>http://groups.google.com/group/ppwcode-users/subscribe</unsubscribe>
      <post>ppwcode-users@googlegroups.com</post>
      <archive>http://groups.google.com/group/ppwcode-users/topics</archive>
    </mailingList>
    <mailingList>
      <name>ppwcode Subversion commits</name>
      <subscribe>http://groups.google.com/group/ppwcode-svn/subscribe</subscribe>
      <unsubscribe>http://groups.google.com/group/ppwcode-svn/subscribe</unsubscribe>
      <post>ppwcode-svn@googlegroups.com</post>
      <archive>http://groups.google.com/group/ppwcode-svn/topics</archive>
    </mailingList>
  </mailingLists>

  <!-- ISSUE MANAGEMENT: OVERWRITE IN YOUR CHILD POM (your problems aren't ours :-) ) -->
  <issueManagement>
    <system>Google Code</system>
    <url>http://code.google.com/p/ppwcode/issues/list</url>
  </issueManagement>

  <!-- DEVELOPERS & CONTRIBUTORS: OVERWRITE IN YOUR CHILD POM (we don't work for you :-) ) -->
  <developers>
    <developer>
      <name>Jan Dockx</name>
      <id>jandockx</id>
      <email>jandockx@gmail.org</email>
      <timezone>+1</timezone>
      <organization>PeopleWare n.v.</organization>
      <organizationUrl>http://www.peopleware.be/</organizationUrl>
      <roles>
        <role>architect</role>
        <role>developer</role>
      </roles>
      <properties>
        <aim>jandockx@mac.com</aim>
        <skype>callto:jandockx</skype>
      </properties>
    </developer>
  </developers>
  <contributors>
  </contributors>

  <!-- REPOSITORIES: ADD REPOSITORIES NEEDED FOR YOUR PROJECT IN THE CHILD POM -->
  <repositories>
<!--
    <repository>
      <id>ppwcodeRepo</id>
      <!++ This needs to be copied in all child poms, to find the parent ++>
      <name>ppwcode Maven 2 repository</name>
      <url>http://www.ppwcode.org/java/maven2repo</url>
    </repository>
-->
  </repositories>

  <!-- LICENSE: OVERWRITE IF NEEDED IN YOUR CHILD POM (Apache v2 is a good license, though :-) ) -->
  <licenses>
    <license>
      <name>Apache License, version 2</name>
      <url>http://www.apache.org/licenses/LICENSE-2.0.html</url>
      <distribution>repo</distribution>
    </license>
  </licenses>


  <properties>

    <!-- OVERWRITE THESE PROPERTIES WITH SETTINGS APPROPRIATE TO YOUR PROJECT IN YOUR CHILD POM -->

    <!-- The root of your project sites for external readers. Do not add the kind or the protocol here: we assume http.
         This should match ppwcode.mainDistroUrl. -->
    <ppwcode.mainUrl>www.ppwcode.org/java</ppwcode.mainUrl>
    <!-- The root of you Java http site, where we will upload the artifacts in a "ppwcode.distributionManagement.repo.relativePath" subdirectory,
         and the project documentation sites, in a "pppwcode.distributionManagement.site.relativePath" subdirectory. Do not add the kind or protocol
         here. We assumes scpexe. This should match ppwcode.mainUrl-->
    <ppwcode.mainDistroUrl>cvs.peopleware.be/ppw/projects/ppwcode/public_html/java</ppwcode.mainDistroUrl>

    <!-- The relative path in the Java http site where the project documentation sites will reside -->
    <ppwcode.distributionManagement.site.relativePath>projectdocs</ppwcode.distributionManagement.site.relativePath>
    <!-- The relative path in the Java http site where the maven 2 repositoru will reside -->
    <!-- the id of the upload place for the documentation site -->
    <ppwcode.distributionManagement.site.id>ppwcodeSite</ppwcode.distributionManagement.site.id>
    <!-- the name of the upload place for the documentation site -->
    <ppwcode.distributionManagement.site.name>ppwcode Project Documentation Site</ppwcode.distributionManagement.site.name>

    <ppwcode.distributionManagement.repo.relativePath>maven2repo</ppwcode.distributionManagement.repo.relativePath>
    <!-- the id of the upload place for the artifacts -->
    <ppwcode.distributionManagement.repo.id>ppwcodeRepo</ppwcode.distributionManagement.repo.id>
    <!-- the name of the upload place for the artifacts -->
    <ppwcode.distributionManagement.repo.name>Main ppwcode Maven 2 Repository</ppwcode.distributionManagement.repo.name>

    <ppwcode.distributionManagement.snapshotrepo.relativePath>maven2snapshotrepo</ppwcode.distributionManagement.snapshotrepo.relativePath>
    <!-- the id of the upload place for the artifacts -->
    <ppwcode.distributionManagement.snapshotrepo.id>ppwcodeSnapshotRepo</ppwcode.distributionManagement.snapshotrepo.id>
    <!-- the name of the upload place for the artifacts -->
    <ppwcode.distributionManagement.snapshotrepo.name>ppwcode Maven 2 Snapshot Repository</ppwcode.distributionManagement.snapshotrepo.name>

    <!-- The root of your Subversion repository. Different projects might reside in here. Do not add the kind or the
         protocol here. We assume svn, http for anonymous access, https for developer access. This should match
         ppwcode.mainScmViewUrl. -->
    <ppwcode.mainScmUrl>ppwcode.googlecode.com/svn</ppwcode.mainScmUrl>
    <!-- The root where external readers can look into your Subversion repository (read-only). Different projects
         might reside in here. Do not add the kind or the protocol here; we assume http. This should match
         ppwcode.mainScmUrl -->
    <ppwcode.mainScmViewUrl>code.google.com/p/ppwcode/source/browse</ppwcode.mainScmViewUrl>
    <!-- The relative path in the Subversion repository where this project will reside. This should point to a directory
         that has at least a "trunk" subdirectory. -->
    <ppwcode.inScmLocation>java/maven2/library-parent-pom</ppwcode.inScmLocation>




    <!-- CALCULATIONS -->

    <!-- CALCULATE DOCUMENTATION SITE SETTINGS -->
    <!-- The relative path in the Java http site where the project documentation site will reside -->
    <ppwcode.inSiteLocation>${ppwcode.distributionManagement.site.relativePath}/${pom.artifactId}/${pom.version}</ppwcode.inSiteLocation>
    <!-- Calculate the url where the documentation site for the project can be found. -->
    <ppwcode.url>http://${ppwcode.mainUrl}/${ppwcode.inSiteLocation}</ppwcode.url>
    <!-- Calculate the url where we will upload the documentation site of the project. -->
    <ppwcode.distributionManagement.site.url>scpexe://${ppwcode.mainDistroUrl}/${ppwcode.inSiteLocation}</ppwcode.distributionManagement.site.url>

    <!-- CALCULATE MAVEN 2 REPOSITORY SETTINGS -->
    <!-- Calculate the url where we will upload the artifacts of the project. -->
    <ppwcode.distributionManagement.repo.url>scpexe://${ppwcode.mainDistroUrl}/${ppwcode.distributionManagement.repo.relativePath}</ppwcode.distributionManagement.repo.url>
    <!-- Calculate the url where we will upload the snapshot artifacts of the project. -->
    <ppwcode.distributionManagement.snapshotrepo.url>scpexe://${ppwcode.mainDistroUrl}/${ppwcode.distributionManagement.snapshotrepo.relativePath}</ppwcode.distributionManagement.snapshotrepo.url>

    <!-- CALCULATE SCM SETTINGS -->
    <!-- Calculate the Subversion URL for access to the trunk of this project, read only -->
    <ppwcode.scm.connection>scm:svn:http://${ppwcode.mainScmUrl}/${ppwcode.inScmLocation}/trunk</ppwcode.scm.connection>
    <!-- Calculate the Subversion URL for access to the trunk of this project, read/write only -->
    <ppwcode.scm.developerConnection>scm:svn:https://${ppwcode.mainScmUrl}/${ppwcode.inScmLocation}/trunk</ppwcode.scm.developerConnection>
    <!-- Calculate the URL for read-only, browser access to the Subversion repository -->
    <ppwcode.scm.url>http://${ppwcode.mainScmViewUrl}/${ppwcode.inScmLocation}</ppwcode.scm.url>

  </properties>



  <!-- MAGIC MANTRA -->
  <!-- The following entries need to be repeated, and can not sensibly be inherited.
       The reason is, sadly, that Maven 2 has a built in, undocumented "feature" that appends the artifact id to a number of URL's and paths
       if those URL's or paths are inherited. The reasoning behind that is he use of inheritance inside multi-module projects.
       It seems that if you are using inheritance outside of multi-module projects, you are out of luck.
       At least, we are :-(.
       The entries here are calculated in the "calculation properties" higher. To avoid the inheritance
       trap, the definitions below need to be repeated in each (consecutive) child, as a magic mantra.
       -->
  <url>${ppwcode.url}</url>
  <scm>
    <connection>${ppwcode.scm.connection}</connection>
    <developerConnection>${ppwcode.scm.developerConnection}</developerConnection>
    <url>${ppwcode.scm.url}</url>
  </scm>
  <distributionManagement>
    <repository>
      <id>${ppwcode.distributionManagement.repo.id}</id>
      <name>${ppwcode.distributionManagement.repo.name}</name>
      <url>${ppwcode.distributionManagement.repo.url}</url>
      <uniqueVersion>true</uniqueVersion>
    </repository>
    <snapshotRepository>
      <id>${ppwcode.distributionManagement.snapshotrepo.id}</id>
      <name>${ppwcode.distributionManagement.snapshotrepo.name}</name>
      <url>${ppwcode.distributionManagement.snapshotrepo.url}</url>
    </snapshotRepository>
    <site>
      <id>${ppwcode.distributionManagement.site.id}</id>
      <name>${ppwcode.distributionManagement.site.name}</name>
      <url>${ppwcode.distributionManagement.site.url}</url>
    </site>
  </distributionManagement>



  <!-- ============================================================================================================ -->
  <!-- ALL THINGS BELOW THIS MARK SHOULD BE CONSIDERED PART OF THE PARENT POM, AND NOT BE OVERWRITTEN IN CHILD POMS -->

  <!-- Build Settings -->
  <build>

    <!--  also compile resources! needed for test -->
    <resources>
      <resource>
        <directory>src/main/resources</directory>
      </resource>
      <resource>
        <directory>src/main/java</directory>
        <!-- ${project.compileSourceRoots} doesn't work here, probably because that is a list or an array,
             and not 1 directory -->
        <includes>
          <!-- add tlds to taglib jar -->
          <include>*.tld</include>
          <!-- add jsp-tags to taglib jar -->
          <include>**/*.tagx</include>
          <include>**/*.tag</include>
          <include>**/*.usage</include>
          <!-- copy all properties files for inclusion in jar -->
          <include>**/*.properties</include>
          <!-- add xml files to jar -->
          <include>**/*.xml</include>
          <!-- add betwixt files to jar -->
          <include>**/*.betwixt</include>
          <!-- add text files to jar -->
          <include>**/*.txt</include>
        </includes>
      </resource>
    </resources>

    <testResources>
      <testResource>
        <directory>src/test/resources</directory>
      </testResource>
      <testResource>
        <directory>src/test/java</directory>
        <includes>
          <!-- add tlds to taglib jar -->
          <include>*.tld</include>
          <!-- add jsp-tags to taglib jar -->
          <include>**/*.tagx</include>
          <include>**/*.tag</include>
          <include>**/*.usage</include>
          <!-- copy all properties files for inclusion in jar -->
          <include>**/*.properties</include>
          <!-- add xml files to jar -->
          <include>**/*.xml</include>
          <!-- add betwixt files to jar -->
          <include>**/*.betwixt</include>
          <!-- add text files to jar -->
          <include>**/*.txt</include>
        </includes>
      </testResource>
    </testResources>

    <pluginManagement>
      <plugins>

        <!-- build -->

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-antrun-plugin</artifactId>
          <version>1.1</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-assembly-plugin</artifactId>
          <version>2.2-beta-2</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-clean-plugin</artifactId>
          <version>2.2</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>2.0.2</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>2.4.3</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-jar-plugin</artifactId>
          <version>2.2</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-source-plugin</artifactId>
          <version>2.0.4</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-javadoc-plugin</artifactId>
          <version>2.4</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-dependency-plugin</artifactId>
          <version>2.0</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-deploy-plugin</artifactId>
          <version>2.3</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-install-plugin</artifactId>
          <version>2.2</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-jar-plugin</artifactId>
          <version>2.2</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-plugin-plugin</artifactId>
          <version>2.4.1</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-resources-plugin</artifactId>
          <version>2.2</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-site-plugin</artifactId>
          <version>2.0-beta-6</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-source-plugin</artifactId>
          <version>2.0.4</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>2.4.3</version>
        </plugin>

      </plugins>
    </pluginManagement>

    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <configuration>
          <compilerVersion>1.5</compilerVersion>
          <source>1.5</source>
          <target>1.5</target>
          <debug>true</debug>
          <showDeprecation>true</showDeprecation>
          <showWarnings>true</showWarnings>
          <optimize>false</optimize>
          <!-- to make debugging possible -->
          <!--  MUDO should be set to true for a release with a profile -->
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <configuration>
          <argLine>-ea</argLine>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jar-plugin</artifactId>
        <executions>
          <execution>
            <goals>
              <goal>test-jar</goal>
           </goals>
          </execution>
        </executions>
        <configuration>
        	<archive>
        		<manifestEntries>
        			<Implementation-Title>${pom.artifactId}</Implementation-Title>
        			<Implementation-Version>${pom.version}</Implementation-Version>
        			<Implementation-Vendor-Id>${pom.groupId}</Implementation-Vendor-Id>
        			<Implementation-Vendor>${pom.organization.name}</Implementation-Vendor>
        			<Specification-Title>${pom.artifactId}</Specification-Title>
        			<Specification-Version>${pom.version}</Specification-Version>
        			<Specification-Vendor>${pom.organization.name}</Specification-Vendor>
        		</manifestEntries>
        	</archive>
        </configuration>
      </plugin>

       <plugin>
         <groupId>org.apache.maven.plugins</groupId>
         <artifactId>maven-source-plugin</artifactId>
         <executions>
           <execution>
             <id>attach-sources</id>
             <phase>verify</phase>
             <goals>
               <goal>jar</goal>
             </goals>
           </execution>
           <execution>
             <id>attach-test-sources</id>
             <phase>verify</phase>
             <goals>
               <goal>test-jar</goal>
             </goals>
           </execution>
         </executions>
       </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-javadoc-plugin</artifactId>
        <executions>
          <execution>
            <id>attach-javadocs</id>
            <goals>
              <goal>jar</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <!-- MUDO add maven-remote-resources-plugin -->

<!-- MUDO waiting for mail host, list
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-changes-plugin</artifactId>
        <executions>
          <execution>
            <goals>
              <goal>announcement-generate</goal>
            </goals>
            <id>announcement-generate</id>
          </execution>
          <execution>
            <goals>
              <goal>announcement-mail</goal>
            </goals>
            <id>announcement-mail</id>
          </execution>
        </executions>
        <configuration>
          <smtpHost>localhost</smtpHost>
          <smtpPort implementation="java.lang.Integer">33125</smtpPort>
          <toAddresses>
            <toAddress implementation="java.lang.String">beedraz@googlegroups.com</toAddress>
          </toAddresses>
        </configuration>
      </plugin>
-->

    </plugins>
  </build>



  <!-- Reporting settings -->
  <reporting>

    <plugins>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-report-plugin</artifactId>
        <version>2.4.3</version>
        <configuration>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>taglist-maven-plugin</artifactId>
        <version>2.2</version>
        <configuration>
          <multipleLineComments>true</multipleLineComments>
          <tags>
            <tag>MUDO</tag>
            <tag>@mudo</tag>
            <tag>NIY</tag>
            <tag>@niy</tag>
            <tag>XXX</tag>
            <tag>TODO</tag>
            <tag>@todo</tag>
            <tag>IDEA</tag>
            <tag>@idea</tag>
          </tags>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jxr-plugin</artifactId>
        <version>2.1</version>
      </plugin>

      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>jdepend-maven-plugin</artifactId>
        <version>2.0-beta-1</version>
        <!-- jdepend-2-dot exists! -->
        <!-- MUDO there is currently no way to provide jdepend with configuration (properties file); for the time being, it
             is stored in ${basedir}/toolProperties, but not used -->
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-javadoc-plugin</artifactId>
        <version>2.4</version>
        <configuration>
          <source>1.5</source> <!-- necessary to enable assertions -->
          <author>true</author> <!-- show author tags -->
          <protected>true</protected> <!-- only show public and protected stuff -->
          <package>false</package>
          <private>false</private>
          <breakiterator>true</breakiterator> <!-- use new algorithm to determine end of first sentence -->
          <stylesheet>maven</stylesheet>
          <docfilessubdirs>true</docfilessubdirs> <!-- enable deep copy of all doc-files subdirectories ... -->
          <excludedocfilessubdir>.svn</excludedocfilessubdir> <!-- ... but don't copy CVS files -->
          <linksource>true</linksource> <!-- HTML version of each source file -->
          <links>
            <link>http://java.sun.com/j2se/1.5.0/docs/api</link>
            <!--  add links for all ppwcode packages that are released -->
          </links>
          <!-- no overview documentation in this project yet
          <offlineLinks>
          </offlineLinks>
          <doctitle></doctitle>
          <overview></overview>
          -->
          <!-- windowtitle default is ok -->
          <header>&lt;a href="${pom.url}"&gt;${pom.artifactId} ${pom.version}&lt;/a&gt;</header>
          <!-- MUDO replace header with logo -->
          <footer>&lt;a href="${pom.url}"&gt;${pom.artifactId} ${pom.version}&lt;/a&gt;</footer>
          <bottom>&amp;copy; PeopleWare n.v., ${pom.inceptionYear}. Released under the
            &lt;a href="http://www.apache.org/licenses/LICENSE-2.0.html"&gt;Apache License, version 2&lt;/a&gt;</bottom>
          <docencoding>ISO-8859-1</docencoding>
          <tags> <!-- order defines order in which tags are shown -->
            <tag>
              <name>note</name>
              <placement>a</placement>
              <head>Note:</head>
            </tag>
            <tag>
              <name>deprecated</name>
              <!-- we want the standard tag here -->
            </tag>
            <tag>
              <name>protected</name>
              <placement>a</placement>
              <head>Information for Subtype Implementors:</head>
            </tag>
            <tag>
              <name>param</name>
              <!-- we want the standard tag here -->
            </tag>
            <tag>
              <name>return</name>
              <!-- we want the standard tag here -->
            </tag>
            <tag>
              <name>throws</name>
              <!-- we want the standard tag here -->
            </tag>
            <tag>
              <name>see</name>
              <!-- we want the standard tag here -->
            </tag>
            <tag>
              <name>author</name>
              <!-- we want the standard tag here -->
            </tag>
            <tag>
              <name>since</name>
              <!-- we want the standard tag here -->
            </tag>
            <tag>
              <name>mudo</name>
              <placement>a</placement>
              <head>Must do:</head>
            </tag>
            <tag>
              <name>todo</name>
              <placement>a</placement>
              <head>To do:</head>
            </tag>
            <tag>
              <name>idea</name>
              <placement>a</placement>
              <head>Idea:</head>
            </tag>
          </tags>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>findbugs-maven-plugin</artifactId>
        <version>1.2</version>
        <configuration>
          <!--
          <effort>Min|Default|Max</effort>
          <xmlOutput>true|false</xmlOutput>
          <relaxed>true|false</relaxed>
          <excludeFilterFile>findbugs-exclude.xml</excludeFilterFile>
          <includeFilterFile>findbugs-include.xml</includeFilterFile>
          <debug>true|false</debug>
          <onlyAnalyze>org.codehaus.mojo.findbugs.*</onlyAnalyze>
          <pluginList>/libs/fb-contrib/fb-contrib-2.8.0.jar</pluginList>
          -->
          <threshold>Low</threshold>
          <effort>Max</effort>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-checkstyle-plugin</artifactId>
        <version>2.2</version>
        <!-- MUDO bring config file to 1.5 and use it -->
      </plugin>

<!--
  DISABLED
  This fails in child projects with
    svn: REPORT request failed on '/svn/!svn/bc/1252/java/metainfo/trunk/<var>CHILD ARTIFACTNAME</var>'
    svn: '/svn/!svn/bc/1252/java/metainfo/trunk/<var>CHILD ARTIFACTNAME</var>' path not found
  And it fails because it is wrong, of course. Why does the changelog plugin insists
  on adding the artifactId in a child, and not in this project itself?
  Anyway, StatSVN also has the Changelog, so it doesn't matter.

      <plugin>
        <!++  if this fails, it means you have no svn installed ++>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-changelog-plugin</artifactId>
        <configuration>
          <type>range</type>
          <range>3650</range>
        </configuration>
      </plugin>
-->

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-changes-plugin</artifactId>
        <version>2.0</version>
        <reportSets>
          <reportSet>
            <reports>
              <report>changes-report</report>
              <!-- IDEA add issue tracker report ? -->
            </reports>
          </reportSet>
        </reportSets>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-pmd-plugin</artifactId>
        <version>2.4</version>
        <configuration>
          <linkXref>true</linkXref>
          <minimumTokens>100</minimumTokens>
          <targetJdk>1.5</targetJdk>
          <!--
          <excludes>
            <exclude>**/*MyClass.java</exclude>
          </excludes>
           -->
        </configuration>
        <!-- MUDO configure http://maven.apache.org/plugins/maven-pmd-plugin/examples/usingRuleSets.html -->
      </plugin>

      <plugin>
        <groupId>net.sf</groupId>
        <artifactId>stat-scm</artifactId>
        <version>1.1.0</version>
        <!-- MUDO needs more config ?? -->
      </plugin>

      <!-- disabled: has problems with @SuppressWarnings
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>javancss-maven-plugin</artifactId>
        <version>2.0-beta-2</version>
      </plugin>
       -->

      <!-- clirr only makes sense in a particular project -->

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <version>2.0</version>
      </plugin>

      <!-- TODO add maven-jdiff-plugin -->

      <!-- IDEA maven-pdf-plugin looks interesting, but is still under development -->
      <!-- IDEA maven-uml-plugin looks interesting, but is still under development -->

      <!-- linkcheck would be desirable, but no maven 2 plugin was found -->
      <!-- doccheck is probably not desirable, and no maven 2 plugin was found -->
    </plugins>

  </reporting>



  <pluginRepositories>
<!--
    <pluginRepository>
      <id>ApacheMaven2PluginSnapshots</id>
      <!++  needed for surefire snapshot version ++>
      <url>http://people.apache.org/repo/m2-snapshot-repository</url>
      <snapshots>
        <enabled>true</enabled>
      </snapshots>
    </pluginRepository>
-->
<!--
    <pluginRepository>
      <id>pluginSnapshots</id>
      <url>http://snapshots.maven.codehaus.org/maven2</url>
    </pluginRepository>
    <pluginRepository>
      <id>stat-scm-sourceforge</id>
      <url>http://stat-scm.sourceforge.net/maven2</url>
    </pluginRepository>
-->
  </pluginRepositories>



<!--
  <ciManagement>...</ciManagement>
  <prerequisites>...</prerequisites>
  <distributionManagement>...</distributionManagement>
  <profiles>...</profiles>
-->

</project>
