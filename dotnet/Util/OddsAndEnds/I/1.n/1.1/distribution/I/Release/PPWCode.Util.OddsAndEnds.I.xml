<?xml version="1.0"?>
<doc>
    <assembly>
        <name>PPWCode.Util.OddsAndEnds.I</name>
    </assembly>
    <members>
        <member name="M:PPWCode.Util.OddsAndEnds.I.Extensions.DateTimeHelper.Min(System.DateTime,System.DateTime)">
            <summary>
            The earliest of 2 date-times.
            </summary>
            <returns>The earliest of <paramref name="dt1"/> and
            <paramref name="dt2"/>.</returns>
        </member>
        <member name="M:PPWCode.Util.OddsAndEnds.I.Extensions.DateTimeHelper.Min(System.Nullable{System.DateTime},System.DateTime)">
            <summary>
            The earliest of 2 date-times. When <paramref name="dt2"/>
            is <c>null</c>, we return <paramref name="dt2"/>.
            </summary>
            <returns>The earliest of <paramref name="dt1"/> and
            <paramref name="dt2"/>. <paramref name="dt2"/> when
            <paramref name="dt1"/> is <c>null</c>.</returns>
        </member>
        <member name="M:PPWCode.Util.OddsAndEnds.I.Extensions.DateTimeHelper.Min(System.DateTime,System.Nullable{System.DateTime})">
            <summary>
            The earliest of 2 date-times. When <paramref name="dt2"/>
            is <c>null</c>, we return <paramref name="dt1"/>.
            </summary>
            <returns>The earliest of <paramref name="dt1"/> and
            <paramref name="dt2"/>. <paramref name="dt1"/> when
            <paramref name="dt2"/> is <c>null</c>.</returns>
        </member>
        <member name="M:PPWCode.Util.OddsAndEnds.I.Extensions.DateTimeHelper.Min(System.DateTime[])">
            <summary>
            The earliest of a number of date-times.
            </summary>
            <returns>With zero inputs, <see cref="F:System.DateTime.MinValue"/>
            is returned.</returns>
        </member>
        <member name="M:PPWCode.Util.OddsAndEnds.I.Extensions.DateTimeHelper.Min(System.Nullable{System.DateTime}[])">
            <summary>
            The earliest of a number of date-times.
            </summary>
            <returns><c>null</c> values are skipped.
            With zero inputs, or all <c>null</c> inputs,<c>null</c>
            is returned.</returns>
        </member>
        <member name="M:PPWCode.Util.OddsAndEnds.I.Extensions.DateTimeHelper.Max(System.Nullable{System.DateTime}[])">
            <summary>
            The latest of a number of date-times.
            </summary>
            <returns><c>null</c> values are skipped.
            With zero inputs, or all <c>null</c> inputs,<c>null</c>
            is returned.</returns>
        </member>
        <member name="T:PPWCode.Util.OddsAndEnds.I.Extensions.NamespaceDoc">
            <summary>
            Contains all the helper classes for the Peopleware system
            </summary>
        </member>
        <member name="T:PPWCode.Util.OddsAndEnds.I.Extensions.StringExtensions">
            <summary>
            PPW helper string functions
            </summary>
        </member>
        <member name="M:PPWCode.Util.OddsAndEnds.I.Extensions.StringExtensions.StartWithACapital(System.String)">
            <summary>
            Checks if the first character of a string is a capital
            </summary>
        </member>
        <member name="M:PPWCode.Util.OddsAndEnds.I.Extensions.StringExtensions.ToLong(System.String)">
            <summary>
            Convert the string to an Int64
            The function returns NULL if the conversion fails
            </summary>
        </member>
        <member name="M:PPWCode.Util.OddsAndEnds.I.Extensions.StringExtensions.ToInt(System.String)">
            <summary>
            Convert the string to an Int32
            The function returns NULL if the conversion fails
            </summary>
        </member>
        <member name="M:PPWCode.Util.OddsAndEnds.I.Extensions.StringExtensions.ToDecimal(System.String)">
            <summary>
            Convert the string to a Decimal
            The function returns NULL if the conversion fails
            </summary>
        </member>
        <member name="M:PPWCode.Util.OddsAndEnds.I.Extensions.StringExtensions.ToDateTime(System.String)">
            <summary>
            Convert the string to a DateTime
            The function returns NULL if the conversion fails
            </summary>
        </member>
        <member name="M:PPWCode.Util.OddsAndEnds.I.Extensions.DateTimeExtensions.ImmediateFirstOfQuarter(System.DateTime)">
            <summary>
            ImmediateFirstOfQuarter returns given date if the given date is first of quarter or else first of next quarter
            </summary>
            <param name="dt"></param>
            <returns></returns>
        </member>
        <member name="M:PPWCode.Util.OddsAndEnds.I.Extensions.DateTimeExtensions.ImmediateFirstOfMonth(System.DateTime)">
            <summary>
            ImmediateFirstOfMonth returns given date if the given date is first of month or else first of next month
            </summary>
            <param name="dt"></param>
            <returns></returns>
        </member>
        <member name="M:PPWCode.Util.OddsAndEnds.I.Extensions.DateTimeExtensions.DaysBetween(System.DateTime,System.DateTime)">
            <summary>
            Indien start- en endate in dezelfde dag liggen, wordt er 0 teruggegeven
            </summary>
            <param name="startDate"></param>
            <param name="endDate"></param>
            <returns></returns>
        </member>
        <member name="M:PPWCode.Util.OddsAndEnds.I.Extensions.DateTimeExtensions.MonthsBetween(System.DateTime,System.DateTime)">
            <summary>
            Indien start- en enddate in dezelfde maand liggen wordt er 0 teruggegeven.
            </summary>
            <param name="startDate"></param>
            <param name="endDate"></param>
            <returns></returns>
        </member>
        <member name="M:PPWCode.Util.OddsAndEnds.I.Extensions.DateTimeExtensions.ImmediateFirstOfYear(System.DateTime)">
            <summary>
            ImmediateFirstOfYear returns given date if the given date is first of year or else first of next year
            </summary>
            <param name="dt"></param>
            <returns></returns>
        </member>
        <member name="M:PPWCode.Util.OddsAndEnds.I.Extensions.DateTimeExtensions.NumberOfDaysInYear(System.DateTime)">
            <summary>
            Aantal dagen in een jaar, rekening houdend met schrikkeljaren.
            </summary>
        </member>
        <member name="M:PPWCode.Util.OddsAndEnds.I.Extensions.TypeExtensions.GetQualifiedName(System.Type)">
            <summary>
            Checks if the first character of a string is a capital
            </summary>
        </member>
        <member name="M:PPWCode.Util.OddsAndEnds.I.Extensions.TypeExtensions.IsNullableType(System.Type)">
            <summary>
            Check if a type is of Nullable type
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:PPWCode.Util.OddsAndEnds.I.Extensions.TypeExtensions.GetSubclassesOf(System.Type,System.Boolean)">
            <summary>
            Get a sequence of types where all the items are a sub-class of <paramref name="type"/>.
            The parameter <paramref name="excludeSystemTypes"/> determines if system types should be excluded.
            </summary>
            <param name="type"></param>
            <param name="excludeSystemTypes"></param>
            <returns></returns>
        </member>
        <member name="T:PPWCode.Util.OddsAndEnds.I.NamespaceDoc">
            <summary>
            <para>This assembly contains a collection of utility code
            (helper methods, extension methods, ...) for different
            domains.</para>
            <para>This is to be considered a proving ground for such
            code. The collection is not well-organized, and dynamic.
            The intention is that, after a while, code here is
            separated out and put into a separate Util or Vernacular
            project for a particular domain. New code will be
            added over time and follow the same path.</para>
            <para>The code here is production quality nevertheless.</para>
            <para>This project should <strong>never depend on any other
            PPWCode library, except PPWCode.Vernacular.Exceptions.</strong>
            In general, it should depend on as little libraries outside
            the standard libraries as possible.</para>
            </summary>
            <remarks>
            <para>Even the allowed dependency on <c>PPWCode.Vernacular.Exceptions</c>
            is a bad one. If needed, the vernacular should be split in 2,
            part util, part vernacular (see Java).</para>
            </remarks>
        </member>
    </members>
</doc>
