<?xml version="1.0" encoding="utf-8"?>
<configuration>
    <!--
/*
 * Copyright 2004 - $Date: 2008-11-15 23:58:07 +0100 (za, 15 nov 2008) $ by PeopleWare n.v..
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
-->
    <configSections>
        <section name="hibernate-configuration" type="NHibernate.Cfg.ConfigurationSectionHandler, NHibernate" />
        <section name="log4net" type="log4net.Config.Log4NetConfigurationSectionHandler,log4net" />
        <sectionGroup name="spring">
          <section name="context" type="Spring.Context.Support.ContextHandler, Spring.Core" />
          <section name="objects" type="Spring.Context.Support.DefaultSectionHandler, Spring.Core" />
        </sectionGroup>
    </configSections>

    <connectionStrings>
        <!-- database connection for the PensioB.Tasks database -->
        <add name="TasksConnectionString"
             connectionString="${TasksConnectionString}"
             providerName="System.Data.SqlClient" />
    </connectionStrings>

    <appSettings>
        <add key="UseSecurity" value="${UseSecurity}" />
        <add key="UseProfiler" value="${UseProfiler}" />
    </appSettings>

    <!-- nhibernate -->
    <hibernate-configuration xmlns="urn:nhibernate-configuration-2.2">
        <bytecode-provider type="lcg" />
        <reflection-optimizer use="true" />
        <session-factory>
            <property name="connection.provider"> NHibernate.Connection.DriverConnectionProvider</property>
            <property name="connection.driver_class">NHibernate.Driver.SqlClientDriver</property>
            <property name="dialect">NHibernate.Dialect.MsSql2008Dialect</property>
            <property name="generate_statistics">${UseProfiler}</property>
            <property name="proxyfactory.factory_class">NHibernate.ByteCode.LinFu.ProxyFactoryFactory, NHibernate.ByteCode.LinFu</property>
            <property name="prepare_sql">true</property>
        </session-factory>
    </hibernate-configuration>

    <!-- log4net -->
    <log4net
        xsi:noNamespaceSchemaLocation="http://csharptest.net/downloads/schema/log4net.xsd"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
        <!-- Define some output appenders -->
        <appender name="EventLogAppender"
                  type="log4net.Appender.EventLogAppender">
            <applicationName value="PPWCode.Kit.Tasks" />
            <layout type="log4net.Layout.PatternLayout">
                <conversionPattern value="%date [%-4thread] %-5level %logger [%method:%line] - %message%newline" />
            </layout>
        </appender>

        <appender name="RollingFileAppender"
                  type="log4net.Appender.RollingFileAppender">
            <file value="${Log4NetLogFileName}" />
            <appendToFile value="true" />
            <rollingStyle value="Composite" />
            <maxSizeRollBackups value="24" />
            <maximumFileSize value="15000KB" />
            <datePattern value="yyyyMMdd" />
            <staticLogFileName value="true" />
            <layout type="log4net.Layout.PatternLayout">
                <conversionPattern value="%date [%-4thread] %-5level %logger [%method:%line] - %message%newline"/>
            </layout>
        </appender>

        <appender name="EmailAppender"
                  type="log4net.Appender.SmtpAppender">
            <subject value="${Log4NetSmtpSubject}" />
            <from value="${Log4NetSmtpFrom}"/>
            <to value ="${Log4NetSmtpTo}"/>
            <smtpHost value="${Log4NetSmtpHost}"/>
            <port value="${Log4NetSmtpPort}"/>
            <authentication value="None" />
            <evaluator type="log4net.Core.LevelEvaluator">
                <threshold value="ERROR"/>
            </evaluator>
            <bufferSize value="32"/>
            <lossy value="true" />
            <layout type="log4net.Layout.PatternLayout">
                <conversionPattern value="%date [%-4thread] %-5level %logger [%method:%line] - %message%newline" />
            </layout>
        </appender>

        <!-- Setup the root category, add the appenders and set the default priority -->
        <root>
            <level value="WARN" />
            <appender-ref ref="EventLogAppender" />
            ${Log4NetRollingFileAppender}
            ${Log4NetEmailAppender}
        </root>
        <logger name="NHibernate">
            <level value="WARN" />
        </logger>
        <logger name="PPWCode">
            <level value="WARN" />
        </logger>
    </log4net>

    <system.serviceModel>
        
        <services>
            <service
                 name="PPWCode.Kit.Tasks.Server.API_I.TasksDao"
                 behaviorConfiguration="Standard.ServiceBehavior" >
                <endpoint
                   address="I/TasksDao"
                   binding="netTcpBinding"
                   bindingConfiguration="netTcpBinding_Dao"
                   contract="PPWCode.Kit.Tasks.API_I.ITasksDao" />
                <host>
                    <baseAddresses>
                        <!-- host address and port where this WCF service is hosted -->
                        <add baseAddress="net.tcp://${TasksDaoHost}:${TasksDaoPort}" />
                    </baseAddresses>
                </host>
            </service>
        </services>

        <bindings>
            <netTcpBinding>
                <binding
                      name="netTcpBinding_Dao"
                      maxReceivedMessageSize="5000000"
                      sendTimeout="00:02:00"
                      receiveTimeout="00:02:00"
                      transactionFlow="true">
                    <reliableSession
                       ordered="true"
                       inactivityTimeout="00:02:00"
                       enabled="true" />
                    <security mode="Transport">
                        <transport
                            clientCredentialType="Windows"
                            protectionLevel="EncryptAndSign" />
                    </security>
                    <readerQuotas
                        maxDepth="64"
                        maxStringContentLength="32768" />
                </binding>

            </netTcpBinding>
        </bindings>

        <behaviors>
            <serviceBehaviors>
                <behavior name="Standard.ServiceBehavior">
                    <serviceAuthorization principalPermissionMode="UseWindowsGroups" />
                    <serviceMetadata />
                    <dataContractSerializer maxItemsInObjectGraph="999999" />
                </behavior>
            </serviceBehaviors>
        </behaviors>
        
    </system.serviceModel>

    <!-- spring -->
    <spring>
        <context>
            <resource uri="config://spring/objects" />
        </context>
        
        <objects xmlns="http://www.springframework.net">
            <object
                id="NHibernateSessionTasksFactory"
                name="NHibernateSessionTasksFactory"
                type="PPWCode.Kit.Tasks.Server.API_I.NHibernateSessionTasksFactory, PPWCode.Kit.Tasks.Server"
                factory-method="GetSessionFactory"
                singleton="true"/>
        </objects>
    </spring>
</configuration>