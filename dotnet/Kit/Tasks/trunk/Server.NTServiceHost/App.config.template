<?xml version="1.0" encoding="utf-8"?>
<configuration>

    <configSections>
        <section name="hibernate-configuration" type="NHibernate.Cfg.ConfigurationSectionHandler, NHibernate" />
        <section name="log4net" type="log4net.Config.Log4NetConfigurationSectionHandler,log4net" />
    </configSections>

    <connectionStrings>
        <add name="TasksConnectionString"
             connectionString="${TasksConnectionString}"
             providerName="System.Data.SqlClient" />
    </connectionStrings>

    <appSettings>
        <add key="UseSecurity" value="${UseSecurity}" />
        <add key="UseProfiler" value="${UseProfiler}" />
    </appSettings>

    <!-- nhibernate -->
    <hibernate-configuration xmlns="urn:nhibernate-configuration-2.2">
        <bytecode-provider type="lcg" />
        <reflection-optimizer use="true" />
        <session-factory>
            <property name="connection.provider"> NHibernate.Connection.DriverConnectionProvider</property>
            <property name="connection.driver_class">NHibernate.Driver.SqlClientDriver</property>
            <property name="dialect">NHibernate.Dialect.MsSql2008Dialect</property>
            <property name="generate_statistics">false</property>
            <property name="proxyfactory.factory_class">NHibernate.ByteCode.LinFu.ProxyFactoryFactory, NHibernate.ByteCode.LinFu</property>
            <property name="current_session_context_class">thread_static</property>
            <property name="cache.use_second_level_cache">true</property>
            <property name="cache.use_query_cache">true</property>
            <property name="cache.provider_class">NHibernate.Caches.SysCache.SysCacheProvider, NHibernate.Caches.SysCache</property>
            <property name="prepare_sql">true</property>
        </session-factory>
    </hibernate-configuration>

    <!-- log4net -->
    <log4net
        xsi:noNamespaceSchemaLocation="http://csharptest.net/downloads/schema/log4net.xsd"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
        <!-- Define some output appenders -->
        <appender name="EventLogAppender" type="log4net.Appender.EventLogAppender">
            <layout type="log4net.Layout.PatternLayout">
                <conversionPattern value="%d{ABSOLUTE} %-5p %c{1}:%L - %m%n" />
            </layout>
        </appender>
        <appender name="rollingFile" type="log4net.Appender.RollingFileAppender">
            <file value="${Log4NetLogFileName}" />
            <appendToFile value="false" />
            <rollingStyle value="Date" />
            <datePattern value="yyyy.MM.dd" />
            <staticLogFileName value="true" />
        </appender>

        <!-- Setup the root category, add the appenders and set the default priority -->
        <root>
            <level value="OFF" />
            <appender-ref ref="${Log4NetDefaultAppender}" />
        </root>
        <logger name="NHibernate">
            <level value="OFF" />
        </logger>
        <logger name="PPWCode">
            <level value="WARN" />
        </logger>
    </log4net>

    <system.serviceModel>

        <services>
            <service
                 name="PPWCode.Kit.Tasks.Server.API_I.TasksDao"
                 behaviorConfiguration="Standard.ServiceBehavior" >
                <endpoint
                   address="I/TasksDao"
                   binding="netTcpBinding"
                   bindingConfiguration="netTcpBinding_Dao"
                   contract="PPWCode.Kit.Tasks.API_I.ITasksDao" />
                <host>
                    <baseAddresses>
                        <add baseAddress="net.tcp://${TasksDaoHost}:${TasksDaoPort}" />
                    </baseAddresses>
                </host>
            </service>

        </services>

        <bindings>
            <netTcpBinding>
                <binding
                      name="netTcpBinding_Dao"
                      maxReceivedMessageSize="5000000"
                      sendTimeout="00:02:00"
                      receiveTimeout="00:02:00" >
                    <reliableSession
                       ordered="true"
                       inactivityTimeout="00:02:00"
                       enabled="true" />
                    <security mode="Transport">
                        <transport
                            clientCredentialType="Windows"
                            protectionLevel="EncryptAndSign" />
                    </security>
                    <readerQuotas
                        maxDepth="64"
                        maxStringContentLength="32768" />
                </binding>

            </netTcpBinding>
        </bindings>

        <behaviors>
            <serviceBehaviors>
                <behavior name="Standard.ServiceBehavior">
                    <serviceAuthorization principalPermissionMode="UseWindowsGroups" />
                    <serviceMetadata />
                    <dataContractSerializer maxItemsInObjectGraph="999999" />
                </behavior>
            </serviceBehaviors>
        </behaviors>
    </system.serviceModel>
</configuration>