<?xml version="1.0" encoding="utf-8"?>
<configuration>
<!--
/*
 * Copyright 2004 - $Date: 2008-11-15 23:58:07 +0100 (za, 15 nov 2008) $ by PeopleWare n.v..
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
-->
  
  <configSections>
    <section name="hibernate-configuration" type="NHibernate.Cfg.ConfigurationSectionHandler, NHibernate" />
    <section name="log4net" type="log4net.Config.Log4NetConfigurationSectionHandler,log4net" />
    <sectionGroup name="spring">
      <section name="context" type="Spring.Context.Support.ContextHandler, Spring.Core" />
      <section name="objects" type="Spring.Context.Support.DefaultSectionHandler, Spring.Core" />
    </sectionGroup>
  </configSections>

  <connectionStrings>
    <add name="TasksConnectionString"
         connectionString="${TestTasksConnectionString}"
         providerName="System.Data.SqlClient" />
  </connectionStrings>

  <appSettings>
    <add key="UseSecurity" value="${UseSecurity}" />
    <add key="UseProfiler" value="${UseProfiler}" />
  </appSettings>

  <!-- nhibernate -->
  <hibernate-configuration xmlns="urn:nhibernate-configuration-2.2">
    <bytecode-provider type="lcg" />
    <reflection-optimizer use="true" />
    <session-factory>
      <property name="connection.provider"> NHibernate.Connection.DriverConnectionProvider</property>
      <property name="connection.driver_class">NHibernate.Driver.SqlClientDriver</property>
      <property name="dialect">NHibernate.Dialect.MsSql2008Dialect</property>
      <property name="generate_statistics">true</property>
      <property name="proxyfactory.factory_class">NHibernate.ByteCode.LinFu.ProxyFactoryFactory, NHibernate.ByteCode.LinFu</property>
      <property name="current_session_context_class">thread_static</property>
      <property name="cache.use_second_level_cache">false</property>
      <property name="cache.use_query_cache">false</property>
      <property name="prepare_sql">true</property>
    </session-factory>
  </hibernate-configuration>

  <!-- log4net -->
  <log4net
      xsi:noNamespaceSchemaLocation="http://csharptest.net/downloads/schema/log4net.xsd"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <!-- Define some output appenders -->
    <appender name="trace" type="log4net.Appender.TraceAppender">
      <layout type="log4net.Layout.PatternLayout">
        <conversionPattern value="%d{ABSOLUTE} %-5p %c{1}:%L - %m%n" />
      </layout>
    </appender>
    <appender name="EventLogAppender" type="log4net.Appender.EventLogAppender">
      <layout type="log4net.Layout.PatternLayout">
        <conversionPattern value="%d{ABSOLUTE} %-5p %c{1}:%L - %m%n" />
      </layout>
    </appender>
    <appender name="rollingFile" type="log4net.Appender.RollingFileAppender">
      <file value="${Log4NetLogFileName}" />
      <appendToFile value="false" />
      <rollingStyle value="Date" />
      <datePattern value="yyyy.MM.dd" />
      <staticLogFileName value="true" />
    </appender>
    <!-- Setup the root category, add the appenders and set the default priority -->
    <root>
      <level value="OFF" />
      <appender-ref ref="${Log4NetDefaultAppender}" />
    </root>
    <logger name="NHibernate">
      <level value="OFF" />
    </logger>
  </log4net>

  <system.serviceModel>
    <client>
      <endpoint
         name="PPWCode.Kit.Tasks.Server.API_I.TasksDao"
         address="net.tcp://${TasksDaoHost}:${TasksDaoPort}/I/TasksDao"
         binding="netTcpBinding"
         bindingConfiguration="netTcpBinding_Dao"
         behaviorConfiguration="ImpersonationBehavior"
         contract="PPWCode.Kit.Tasks.API_I.ITasksDao" />

      <endpoint
         name="PPWCode.Kit.Tasks.Server.API_I.Tasks"
         address="net.tcp://${TasksDaoHost}:${TasksDaoPort}/I/Tasks"
         binding="netTcpBinding"
         bindingConfiguration="netTcpBinding_Dao"
         behaviorConfiguration="ImpersonationBehavior"
         contract="PPWCode.Kit.Tasks.API_I.ITasks" />
    </client>

    <behaviors>
      <endpointBehaviors>
        <behavior name="ImpersonationBehavior">
          <clientCredentials>
            <windows allowedImpersonationLevel="Identification" />
          </clientCredentials>
        </behavior>
      </endpointBehaviors>
    </behaviors>

    <bindings>
      <netTcpBinding>
        <binding
              name="netTcpBinding_Dao"
              maxReceivedMessageSize="5000000"
              sendTimeout="00:02:00" >
          <reliableSession
             ordered="true"
             inactivityTimeout="00:02:00"
             enabled="true" />
          <security mode="Transport">
            <transport
                clientCredentialType="Windows"
                protectionLevel="EncryptAndSign" />
          </security>
          <readerQuotas
              maxDepth="64"
              maxStringContentLength="32768" />
        </binding>
      </netTcpBinding>

      <netNamedPipeBinding>
        <binding
            name="InProcFactory"
            maxReceivedMessageSize="5000000"
            receiveTimeout="02:00:00"
            sendTimeout="02:00:00">
          <readerQuotas
              maxDepth="64"
              maxStringContentLength="32768" />
        </binding>
      </netNamedPipeBinding>
    </bindings>
  </system.serviceModel>

  <!-- spring -->
  <spring>
    <context>
      <resource uri="config://spring/objects" />
    </context>
    <objects xmlns="http://www.springframework.net">
      <object
          id="TasksDaoFactory"
          name="TasksDaoFactory"
          type="${TasksServiceFactory}"
          factory-method="CreateTasksInstance"
          singleton="false"/>
      <object
          id="TasksFactory"
          name="TasksFactory"
          type="${TasksServiceFactory}"
          factory-method="CreateTasks"
          singleton="false"/>
      <object
          id="NHibernateSessionTasksFactory"
          name="NHibernateSessionTasksFactory"
          type="PPWCode.Kit.Tasks.Server.API_I.NHibernateSessionTasksFactory, PPWCode.Kit.Tasks.Server"
          factory-method="GetSessionFactory"
          singleton="true"/>
    </objects>
  </spring>

  <!--<system.diagnostics>
        <sources>
            <source name="System.ServiceModel"
                    switchValue="Information, ActivityTracing"
                    propagateActivity="true">
                <listeners>
                    <add name="traceListener"
                         type="System.Diagnostics.XmlWriterTraceListener"
                         initializeData= "d:\log\Traces.svclog" />
                </listeners>
            </source>
        </sources>
    </system.diagnostics>-->

</configuration>